BITS == 16
MINREG 26
MINHEAP 4096
RUN ROM
MINSTACK 256

MOV $2 SP
CAL .main
SBGE ..COMP_BLT_IN..PRINT_NUM..P_N $1 0
OUT %TEXT 45
..COMP_BLT_IN..PRINT_NUM..P_N
ABS $2 $1
OUT %NUMB $2
HLT
.get_c
	PSH $2
	MOV $2 SP
	SUB SP SP 11
	// MOV .na.gen.a.2 $3
	MOV $7 $3
	LSTR $2 -1 $7
	// MOV .na.gen.b.3 $4
	MOV $7 $4
	LSTR $2 -2 $7
	// MOV .na.gen.c.4 $5
	MOV $7 $5
	LSTR $2 -3 $7
	// MOV .na.gen.d.5 $6
	MOV $7 $6
	LSTR $2 -4 $7
	// ADD .conv.asm.v.1. 2 $2
	ADD $7 2 $2
	LSTR $2 -5 $7
	// __LEA .conv.asm.v.2. .na.gen.g.6
	SUB $7 $2 10
	LSTR $2 -6 $7
	// CPY .conv.asm.v.2. .conv.asm.v.1.
	LLOD $7 $2 -5
	LLOD $8 $2 -6
	CPY $8 $7
	// ADD .conv.asm.v.1. .conv.asm.v.1. 1
	LLOD $7 $2 -5
	ADD $7 $7 1
	LSTR $2 -5 $7
	// ADD .conv.asm.v.2. .conv.asm.v.2. 1
	LLOD $7 $2 -6
	ADD $7 $7 1
	LSTR $2 -6 $7
	// CPY .conv.asm.v.2. .conv.asm.v.1.
	LLOD $7 $2 -5
	LLOD $8 $2 -6
	CPY $8 $7
	// ADD .conv.asm.v.1. .conv.asm.v.1. 1
	LLOD $7 $2 -5
	ADD $7 $7 1
	LSTR $2 -5 $7
	// ADD .conv.asm.v.2. .conv.asm.v.2. 1
	LLOD $7 $2 -6
	ADD $7 $7 1
	LSTR $2 -6 $7
	// CPY .conv.asm.v.2. .conv.asm.v.1.
	LLOD $7 $2 -5
	LLOD $8 $2 -6
	CPY $8 $7
	// ADD .conv.asm.v.1. .conv.asm.v.1. 1
	LLOD $7 $2 -5
	ADD $7 $7 1
	LSTR $2 -5 $7
	// ADD .conv.asm.v.2. .conv.asm.v.2. 1
	LLOD $7 $2 -6
	ADD $7 $7 1
	LSTR $2 -6 $7
	// CPY .conv.asm.v.2. .conv.asm.v.1.
	LLOD $7 $2 -5
	LLOD $8 $2 -6
	CPY $8 $7
	// ADD .conv.asm.v.1. .conv.asm.v.1. 1
	LLOD $7 $2 -5
	ADD $7 $7 1
	LSTR $2 -5 $7
	// ADD .conv.asm.v.2. .conv.asm.v.2. 1
	LLOD $7 $2 -6
	ADD $7 $7 1
	LSTR $2 -6 $7
	// .lbl.gen.1.
	.lbl.gen.1.
	// __LEA $8 .na.gen.g.6
	SUB $8 $2 10
	// LLOD $8 $8 2
	LLOD $8 $8 2
	// MOV tmp.2. $8
	MOV $7 $8
	LSTR $2 -11 $7
	// MOV $1 tmp.2.
	LLOD $7 $2 -11
	MOV $1 $7
	// RET
	MOV SP $2
	POP $2
	RET
.main
	PSH $2
	MOV $2 SP
	SUB SP SP 10
	// .lbl.gen.5.
	.lbl.gen.5.
	// __LEA .conv.asm.v.3. .na.gen.g.7
	SUB $7 $2 5
	LSTR $2 -1 $7
	// LSTR .conv.asm.v.3. 0 0
	LLOD $9 $2 -1
	LSTR $9 0 0
	// __LEA .conv.asm.v.4. .na.gen.g.7
	SUB $7 $2 5
	LSTR $2 -6 $7
	// LSTR .conv.asm.v.4. 1 0
	LLOD $9 $2 -6
	LSTR $9 1 0
	// __LEA .conv.asm.v.5. .na.gen.g.7
	SUB $7 $2 5
	LSTR $2 -7 $7
	// LSTR .conv.asm.v.5. 2 0
	LLOD $9 $2 -7
	LSTR $9 2 0
	// __LEA .conv.asm.v.6. .na.gen.g.7
	SUB $7 $2 5
	LSTR $2 -8 $7
	// LSTR .conv.asm.v.6. 3 0
	LLOD $9 $2 -8
	LSTR $9 3 0
	// __LEA .conv.asm.v.7. .na.gen.g.7
	SUB $7 $2 5
	LSTR $2 -9 $7
	// LSTR .conv.asm.v.7. 2 50
	LLOD $9 $2 -9
	LSTR $9 2 50
	// MOV $3 0
	MOV $3 0
	// MOV $4 0
	MOV $4 0
	// MOV $5 0
	MOV $5 0
	// MOV $6 0
	MOV $6 0
	// __LEA $8 .na.gen.g.7
	SUB $8 $2 5
	// LLOD $7 $8 3
	LLOD $7 $8 3
	// PSH $7
	PSH $7
	// LLOD $7 $8 2
	LLOD $7 $8 2
	// PSH $7
	PSH $7
	// LLOD $7 $8 1
	LLOD $7 $8 1
	// PSH $7
	PSH $7
	// LLOD $7 $8 0
	LLOD $7 $8 0
	// PSH $7
	PSH $7
	// CAL .get_c
	CAL .get_c
	// MOV tmp.6. $1
	MOV $7 $1
	LSTR $2 -10 $7
	// MOV $1 tmp.6.
	LLOD $7 $2 -10
	MOV $1 $7
	// RET
	MOV SP $2
	POP $2
	RET
