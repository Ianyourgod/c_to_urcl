BITS == 16
MINREG 26
MINHEAP 4096
RUN ROM
MINSTACK 16

MOV $2 SP
CAL .main
SBGE ..COMP_BLT_IN..PRINT_NUM..P_N $1 0
OUT %TEXT 45
..COMP_BLT_IN..PRINT_NUM..P_N
ABS $2 $1
OUT %NUMB $2
HLT
.main
	PSH $2
	MOV $2 SP
	SUB SP SP 13
	// .lbl.gen.1.
	.lbl.gen.1.
	// __LEA .conv.asm.v.1. .na.gen.n.3
	SUB $7 $2 3
	LSTR $2 -1 $7
	// LSTR .conv.asm.v.1. 0 0
	LLOD $9 $2 -1
	LSTR $9 0 0
	// __LEA .conv.asm.v.2. .na.gen.n.3
	SUB $7 $2 3
	LSTR $2 -4 $7
	// LSTR .conv.asm.v.2. 1 0
	LLOD $9 $2 -4
	LSTR $9 1 0
	// MOV tmp.3. 10
	MOV $7 10
	LSTR $2 -5 $7
	// __LEA .conv.asm.v.3. tmp.2.
	SUB $7 $2 7
	LSTR $2 -6 $7
	// LSTR .conv.asm.v.3. 0 tmp.3.
	LLOD $7 $2 -5
	LLOD $9 $2 -6
	LSTR $9 0 $7
	// __LEA .conv.asm.v.4. tmp.2.
	SUB $7 $2 7
	LSTR $2 -8 $7
	// __LEA .conv.asm.v.5. .na.gen.n.3
	SUB $7 $2 3
	LSTR $2 -9 $7
	// ADD .conv.asm.v.5. .conv.asm.v.5. 1
	LLOD $7 $2 -9
	ADD $7 $7 1
	LSTR $2 -9 $7
	// CPY .conv.asm.v.5. .conv.asm.v.4.
	LLOD $7 $2 -8
	LLOD $8 $2 -9
	CPY $8 $7
	// ADD .conv.asm.v.4. .conv.asm.v.4. 1
	LLOD $7 $2 -8
	ADD $7 $7 1
	LSTR $2 -8 $7
	// ADD .conv.asm.v.5. .conv.asm.v.5. 1
	LLOD $7 $2 -9
	ADD $7 $7 1
	LSTR $2 -9 $7
	// __LEA .conv.asm.v.6. .na.gen.n.3
	SUB $7 $2 3
	LSTR $2 -10 $7
	// ADD .conv.asm.v.6. .conv.asm.v.6. 1
	LLOD $7 $2 -10
	ADD $7 $7 1
	LSTR $2 -10 $7
	// __LEA .conv.asm.v.7. tmp.4.
	SUB $7 $2 12
	LSTR $2 -11 $7
	// CPY .conv.asm.v.7. .conv.asm.v.6.
	LLOD $7 $2 -10
	LLOD $8 $2 -11
	CPY $8 $7
	// ADD .conv.asm.v.6. .conv.asm.v.6. 1
	LLOD $7 $2 -10
	ADD $7 $7 1
	LSTR $2 -10 $7
	// ADD .conv.asm.v.7. .conv.asm.v.7. 1
	LLOD $7 $2 -11
	ADD $7 $7 1
	LSTR $2 -11 $7
	// CPY .conv.asm.v.7. .conv.asm.v.6.
	LLOD $7 $2 -10
	LLOD $8 $2 -11
	CPY $8 $7
	// ADD .conv.asm.v.6. .conv.asm.v.6. 1
	LLOD $7 $2 -10
	ADD $7 $7 1
	LSTR $2 -10 $7
	// ADD .conv.asm.v.7. .conv.asm.v.7. 1
	LLOD $7 $2 -11
	ADD $7 $7 1
	LSTR $2 -11 $7
	// MOV tmp.5. tmp.4.
	LLOD $7 $2 -12
	MOV $7 $7
	LSTR $2 -13 $7
	// MOV $1 tmp.5.
	LLOD $7 $2 -13
	MOV $1 $7
	// RET
	MOV SP $2
	POP $2
	RET
